---
- hosts: "localhost"
  gather_facts: false
  vars_files:
    - "vars/server.yaml"
  vars:
    file1_sha256: "{{ lookup('file', 'data/file1.txt', lstrip=false, rstrip=false) | hash('sha256') }}"
  module_defaults: &pulp_module_defaults
    pulp.squeezer.file_content: &pulp_connection_details
      pulp_url: "{{ pulp_url }}"
      username: "{{ pulp_username }}"
      password: "{{ pulp_password }}"
      validate_certs: "{{ pulp_validate_certs | default(true) }}"
    pulp.squeezer.file_repository:
      <<: *pulp_connection_details
    pulp.squeezer.delete_orphans:
      <<: *pulp_connection_details
  tasks:
    - name: "Make repository absent"
      pulp.squeezer.file_repository:
        name: "{{ item }}"
        state: "absent"
      loop:
        - "test_file_repository"
        - "test_file_repository2"
    - name: "Create repository"
      pulp.squeezer.file_repository:
        name: "{{ item }}"
        state: "present"
      loop:
        - "test_file_repository"
        - "test_file_repository2"
    - name: "Delete orphans"
      pulp.squeezer.delete_orphans:
        protection_time: 0
    - name: "Clean openapi cache"
      file:
        path: "{{ lookup('env', 'XDG_CACHE_HOME') | default('~/.cache') }}/squeezer"
        state: "absent"

- hosts: "tests"
  gather_facts: false
  vars_files:
    - "vars/server.yaml"
  vars:
    file1_sha256: "{{ lookup('file', 'data/file1.txt', lstrip=false, rstrip=false) | hash('sha256') }}"
  module_defaults:
    <<: *pulp_module_defaults
  tasks:
    - name: "Create file content unit"
      pulp.squeezer.file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
        file: "data/file1.txt"
        repository: "test_file_repository"
        state: "present"
      register: "result"
    - name: "Verify create content unit"
      assert:
        that:
          - result.changed == true
          - result.content.relative_path == "data/file1.txt"
          - ansible_check_mode or result.content.sha256 == file1_sha256

    - name: "Create file content unit (2nd try)"
      pulp.squeezer.file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
        file: "data/file1.txt"
        repository: "test_file_repository"
        state: "present"
      register: "result"
    - name: "Verify create content unit (2nd try)"
      assert:
        that:
          - result.changed == false

    - name: "Upload file into different repository"
      pulp.squeezer.file_content:
        relative_path: "data/file1.txt"
        file: "data/file1.txt"
        repository: "test_file_repository2"
        state: "present"
      register: "result"
    - name: "Verify Upload file into different repository"
      assert:
        that:
          - result.changed == true

    - name: "Remove file from other repository"
      pulp.squeezer.file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
        file: "data/file1.txt"
        repository: "test_file_repository2"
        state: "absent"
      register: "result"
    - name: "Verify remove file from other repository"
      assert:
        that:
          - result.changed == true

    - name: "List file content units in repository"
      pulp.squeezer.file_content:
        repository: "test_file_repository"
      register: "result"
    - name: "Verify list file content units"
      assert:
        that:
          - result.changed == false
          - result.contents | length == 1
          - result.contents[0].relative_path == "data/file1.txt"

    - name: "List file content units in repository"
      pulp.squeezer.file_content:
        repository: "test_file_repository2"
      register: "result"
    - name: "Verify list file content units"
      assert:
        that:
          - result.changed == false
          - result.contents | length == 0

    - name: "List file content units"
      pulp.squeezer.file_content: {}
      register: "result"
    - name: "Verify list file content units"
      assert:
        that:
          - result.changed == false
          - result.contents | length >= 1

    - name: "Read file content unit"
      pulp.squeezer.file_content:
        digest: "{{ file1_sha256 }}"
        relative_path: "data/file1.txt"
      register: "result"
    - name: "Verify read file content unit"
      assert:
        that:
          - result.changed == false
          - result.content.sha256 == file1_sha256
...
